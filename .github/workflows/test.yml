name: Test
on:
  pull_request:
    branches: 
    - main
    
jobs:
  test:
    runs-on: ubuntu-latest
    container: node:lts-alpine
    environment: baibay

    strategy:
      matrix:
        node-version: ['17.x']

    services:
      mongodb:
        image: mongo:latest
        options: >-
          --health-cmd mongo
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 27017:27017
        
      zookeeper:
        image: wurstmeister/zookeeper
        ports:
          - 2181:2181
        env:
          ZOOKEEPER_CLIENT_PORT: 2181
          ZOOKEEPER_TICK_TIME: 2000
          ALLOW_ANONYMOUS_LOGIN: yes

      kafka:
        image: wurstmeister/kafka
        ports:
          - 9092:9092
        env:
          KAFKA_BROKER_ID: 1
          KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
          KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
          ALLOW_PLAINTEXT_LISTENER: yes
          KAFKA_ADVERTISED_HOST_NAME: kafka
          KAFKA_DELETE_TOPIC_ENABLE: false
          KAFKA_AUTO_CREATE_TOPICS_ENABLE: false
          KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
          KAFKA_ADVERTISED_PORT: 9092

    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Setup node version ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: yarn --frozen-lockfile

      - name: Migration
        run: yarn migrate

      - name: Create env file
        run: |
          touch .env
          echo AWS_CREDENTIAL_KEY="$AWS_CREDENTIAL_KEY" >> .env
          echo AWS_CREDENTIAL_SECRET="$AWS_CREDENTIAL_SECRET" >> .env
          echo AWS_S3_BUCKET="$AWS_S3_BUCKET" >> .env
          echo AWS_S3_REGION="$AWS_S3_REGION" >> .env
        env:
          AWS_CREDENTIAL_KEY: ${{ secrets.AWS_CREDENTIAL_KEY }}
          AWS_CREDENTIAL_SECRET: ${{ secrets.AWS_CREDENTIAL_SECRET }}
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          AWS_S3_REGION: ${{ secrets.AWS_S3_REGION }}
          KAFKA_CLIENT_ID: KAFKA_ACK
          KAFKA_ADMIN_CLIENT_ID: KAFKA_ADMIN_ACK
          KAFKA_BROKERS: kafka:9092
          KAFKA_CONSUMER_GROUP: nestjs.ack
          DATABASE_HOST: mongodb://mongodb:27017
          
      - name: Unit Test
        run: yarn test

      - name: Unit Integration
        run: yarn test:integration

      - name: E2E Test
        run: yarn test:e2e
